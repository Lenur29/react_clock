{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerID","this","window","setInterval","setState","console","log","prevProps","props","name","clearInterval","toLocaleTimeString","React","Component","App","isClockVisible","clockName","showClock","hideClock","setClockName","Math","round","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAMaA,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAG1BM,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAbP,gCAgBE,SAAmBS,GACbN,KAAKO,MAAMC,OAASF,EAAUE,MAEhCJ,QAAQC,IAAR,qCAA0CC,EAAUE,KAApD,eAA+DR,KAAKO,MAAMC,SAnBhF,kCAuBE,WACEC,cAAcT,KAAKD,WAxBvB,oBA2BE,WACE,OACEC,KAAKJ,MAAMC,KAAKa,yBA7BtB,GAA2BC,IAAMC,Y,OCDpBC,EAAb,4MACEjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,GAHf,EAMEC,UAAY,WACV,EAAKb,SAAS,CAAEW,gBAAgB,KAPpC,EAUEG,UAAY,WACV,EAAKd,SAAS,CAAEW,gBAAgB,KAXpC,EAcEI,aAAe,WACb,EAAKf,SAAS,CAAEY,UAAWI,KAAKC,MAAsB,GAAhBD,KAAKE,aAf/C,4CAkBE,WACE,MAAsCrB,KAAKJ,MAAnCkB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKO,UAAU,MAAf,UACE,mDACkBP,KAElB,oBAAGO,UAAU,OAAb,0BAEG,IACAR,GAAkB,cAAC,EAAD,CAAON,KAAMO,OAGlC,sBAAKO,UAAU,YAAf,UACE,wBAAQA,UAAU,cAAcC,KAAK,SAASC,QAASxB,KAAKgB,UAA5D,wBAIA,wBAAQM,UAAU,cAAcC,KAAK,SAASC,QAASxB,KAAKiB,UAA5D,wBAIA,wBAAQK,UAAU,gBAAgBC,KAAK,SAASC,QAASxB,KAAKkB,aAA9D,mCAzCV,GAAyBP,IAAMC,WCF/Ba,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6c291bee.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number,\n};\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    date: new Date(),\n  };\n\n  timerID: number | undefined;\n\n  componentDidMount() {\n    this.timerID = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n    // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return (\n      this.state.date.toLocaleTimeString()\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/index';\nimport { State } from './types/State';\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  setClockName = () => {\n    this.setState({ clockName: Math.round(Math.random() * 10) });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {`React Clock ${clockName}`}\n        </h1>\n        <p className=\"text\">\n          Current time:\n          {' '}\n          {isClockVisible && <Clock name={clockName} />}\n        </p>\n\n        <div className=\"container\">\n          <button className=\"show-button\" type=\"button\" onClick={this.showClock}>\n            Show Clock\n          </button>\n\n          <button className=\"hide-button\" type=\"button\" onClick={this.hideClock}>\n            Hide Clock\n          </button>\n\n          <button className=\"random-button\" type=\"button\" onClick={this.setClockName}>\n            Random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}